/* Import Google Font - Inter */
@import url('https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&family=Montserrat:wght@100..900&family=Outfit:wght@100..900&family=Prata&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Inter", sans-serif;
}

body {
  display: flex;
  align-items: center; /*Vertically centers the child elements along the cross axis (vertical axis, by default).*/
  justify-content: center;  /*Horizontally centers the child elements along the main axis (horizontal axis, by default).*/
  min-height: 100vh; /*Ensures the body takes up at least the full height of the viewport (100% of the visible screen height).*/
  background: linear-gradient(#EEEEFF, #C8C7FF); /*Applies a vertical linear gradient as the background. It smoothly transitions. Giving the page a subtle, visually appealing backdrop.
  */
}

.chatbot-popup {
  position: relative;
  width: 420px;
  background: #fff;
  overflow: hidden; /*Hides any content that overflows the boundaries of the element, ensuring a clean, contained appearance.*/
  border-radius: 15px;
  box-shadow: 0 0 128px 0 rgba(0, 0, 0, 0.1), 0 32px 64px -48px rgba(0, 0, 0, 0.9);
}

.chat-header {
  display: flex;
  background: #5350C4;
  align-items: center;
  justify-content: space-between;
  padding: 15px 22px;
}

.chat-header .header-info {
  display: flex;
  gap: 10px;
  align-items: center;
}

.header-info .chatbot-logo {
  height: 35px;
  width: 35px;
  background: #fff;
  fill: #5350C4; /*This property is typically used with SVG elements. It sets the color that fills the shape(s) inside an SVG.*/
  flex-shrink: 0; /*This property controls how much a flex item should shrink relative to other items when there's insufficient space in a flex container.*/
  border-radius: 50%;
  padding: 6px;
}

.header-info .logo-text {
  color: #fff;
  font-size: 1.31rem;
  font-weight: 600px;
}

.chat-header #close-chatbot {
  border: none; /*Removes the default border around the button.*/
  color: #fff;
  height: 40px;
  width: 40px;
  font-size: 1.9rem;
  margin-right: -10px;
  padding-top: 2px;
  cursor: pointer;
  border-radius: 50%;
  background: none;
  transition: 0.2s ease;
}

.chat-header #close-chatbot:hover {
  background: #3d39ac;
}

.chat-body {
  padding: 25px 22px;
  display: flex;
  flex-direction: column; /*Stacks the child elements vertically (from top to bottom), which is typical for chat messages.*/
  overflow-y: auto;
  gap: 20px;
  margin-bottom: 82px;
  height: 460px;
}

.chat-body .message {
  display: flex;
  gap: 11px;
  align-items: center;
}

.chat-body .bot-message .bot-avatar {
  height: 35px;
  width: 35px;
  padding: 6px;
  fill: #fff;
  flex-shrink: 0; /*This property controls how much a flex item should shrink relative to other items when there's insufficient space in a flex container.*/
  align-items: flex-end; /*Aligns the child elements along the cross axis (vertical axis, by default) to the end of the flex container.*/
  margin-bottom: 2px;
  border-radius: 50%;
  background: #5350C4;
}

.chat-body .user-message {
  flex-direction: column;
  align-items: flex-end; /*CSS flex properties are not inherited from parent flex containers. Each flex container establishes its own independent layout context for its children. Therefore, even though .chat-body uses flex-direction: column;, that property does not "trickle down" to nested flex containers like .user-message.*/
}

.chat-body .message .message-text {
  padding: 12px 16px;
  max-width: 75%;
  font-size: 0.95rem;
}

.chat-body .bot-message .message-text {
  background: #F2F2FF;
  border-radius: 13px 13px 13px 3px; /*The first value sets the top-left corner, the second value sets the top-right corner, the third value sets the bottom-right corner, and the fourth value sets the bottom-left corner.*/
}

.chat-body .bot-message.thinking .message-text {
  padding: 2px 16px;
}

/*In CSS, when two class names are concatenated with no space (as in .bot-message.thinking), it selects an element that has both classes applied. That is, the element must have the class "bot-message" and the class "thinking" at the same time.

Why No Space?
Same Element vs. Descendant:
Without a Space: .bot-message.thinking means the same element has both classes.
With a Space (e.g., .bot-message .thinking): This would target an element with the "thinking" class that is a descendant of an element with the "bot-message" class, which is a different selection.
*/

.chat-body .user-message .message-text {
  color: #fff;
  background: #5350C4;
  border-radius: 13px 13px 3px 13px;
}

.chat-body .bot-message .thinking-indicator {
  display: flex;
  gap: 4px;
  padding-block: 15px;
}

.chat-body .bot-message .thinking-indicator .dot {
  height: 7px;
  width: 7px;
  opacity: 0.7;
  border-radius: 50%;
  background: #6F6BC2;
  animation: dotPulse 1.8s ease-in-out infinite;
}

.chat-body .bot-message .thinking-indicator .dot:nth-child(1) {
  animation-delay: 0.2s;
}
.chat-body .bot-message .thinking-indicator .dot:nth-child(2) {
  animation-delay: 0.3s;
}
.chat-body .bot-message .thinking-indicator .dot:nth-child(3) {
  animation-delay: 0.4s;
}

@keyframes dotPulse {
  0%, 44% {
    transform: translateY(0)
  }
  28% {
    opacity: 0.4;
    transform: translateY(-4px)
  }
  44% {
    opacity: 0.2;
  }
  /*With 44%: The dot quickly transitions and then holds its final state for a significant portion of the animation duration, creating a pulsing effect with a pause.
  With 100%: The animation transitions more gradually over the entire duration, leading to a smoother, continuous change without an extended pause.*/
}

.chat-footer {
  position: absolute; 
  bottom: 0;
  width: 100%;
  background: #fff;
  padding: 15px 22px 20px;
}

.chat-footer .chat-form {
  display: flex;
  align-items: center;
  background: #fff;
  border-radius: 32px;
  outline: 1px solid #CCCCE5;
}

.chat-footer .chat-form:focus-within { /*The :focus-within pseudo-class matches an element if the element or any of its descendants are focused.*/
  outline: 1px solid #5350C4;
}

.chat-form .message-input {
  border: none;
  outline: none;
  height: 47px;
  width: 100%;
  resize: none; /*Prevents the user from resizing the textarea.*/
  font-size: 0.95rem;
  padding: 14px 0 13px 18px;
  border-radius: inherit; /*Inherits the border-radius property from the parent element.*/
}

.chat-form .chat-controls {
  display: flex;
  height: 47px;
  align-items: center;
  gap: 3px;
  align-self: flex-end; /*Aligns the flex container along the cross axis (vertical axis, by default) to the end of the flex container.*/
  padding: 6px;
}

.chat-form .chat-controls button {
  height: 35px;
  width: 35px;
  border: none;
  font-size: 1.15rem; 
  cursor: pointer;
  background: none;
  color: #706DB0;
  border-radius: 50%;
  transition: 0.2s ease;
}

.chat-form .chat-controls #send-message {
  background: #5350C4;
  display: none;
  color: #fff;
}

.chat-form .message-input:valid~.chat-controls #send-message { 
  display: block;
}

.chat-form .chat-controls #send-message:hover {
  background: #3d39ac;
}

.chat-form .chat-controls button:hover {
  background: #f1f1ff;
}









