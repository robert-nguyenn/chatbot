/* Import Google Font - Inter */
@import url('https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&family=Montserrat:wght@100..900&family=Outfit:wght@100..900&family=Prata&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Inter", sans-serif;
}

body {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  background: linear-gradient(#EEEEFF, #C8C7FF);
}

.chatbot-popup {
  width: 420px;
  background: #fff;
  /* The overflow: hidden; property is used in .chatbot-popup but not in .header-info .chatbot-logo because of the different contexts and purposes of these elements:

  .chatbot-popup:

  Purpose: This is a container element that may contain various child elements, including text, images, and other content.
  Reason for overflow: hidden;: To ensure that any content that overflows the boundaries of the .chatbot-popup respects the rounded corners created by border-radius: 15px;. This prevents any child elements from visually breaking the rounded corners effect.
  .header-info .chatbot-logo:

  Purpose: This is a smaller, self-contained element (an SVG logo) that is unlikely to have overflowing content.
  Reason for not needing overflow: hidden;: Since the .chatbot-logo is an SVG with a fixed size and does not contain other elements that might overflow, there is no need to use overflow: hidden;. The border-radius: 50%; is sufficient to create a circular shape for the logo. */
  overflow: hidden;
  border-radius: 15px;
  /* box-shadow: offset-x offset-y blur-radius spread-radius color; */
  /* 0: Horizontal offset (no horizontal shift)
    32px: Vertical offset (shifted down by 32px)
    64px: Blur radius (medium blur effect)
    -48px: Spread radius (shrinks the shadow)
    rgba(0, 0, 0, 0.5): Color (black with 50% opacity) */
  box-shadow: 0 0 128px 0 rgba(0, 0, 0, 0.1), 0 32px 64px -48px rgba(0, 0, 0, 0.5)
}

.chat-header {
  display: flex;
  /* The align-items property in CSS is used to align flex items along the cross axis (vertical axis by default) of the flex container. It is used within a flex container to control the alignment of items within that container. */
  align-items: center;
  background: #5350C4;
  padding: 15px 22px;
  justify-content: space-between;
}

.chat-header .header-info {
  display: flex;
  /* The gap property in CSS is used to define the spacing between items in a flex or grid container. In this context, it is used to set the space between the flex items within the .header-info container. 
  gap: 10px;: This sets a 10-pixel space between each flex item inside the .header-info container.
  */
  gap: 10px;
  align-items: center;
}

.header-info .chatbot-logo {
  height: 35px;
  width: 35px;
  padding: 6px;
  /* The fill property is used to set the color of an SVG shape */
  fill: #5350C4;
  /* flex-shrink:

  Purpose: The flex-shrink property specifies how much a flex item should shrink relative to the rest of the flex items inside a flex container when there is not enough space.
  Value: 0 means the item will not shrink at all, even if there is not enough space in the flex container.
  Example: flex-shrink: 0; ensures that the .chatbot-logo element will maintain its size and not shrink when the flex container is resized. */
  flex-shrink: 0;
  background: #fff;
  border-radius: 50%;
}

.header-info .logo-text {
  color: #fff;
  font-size: 1.31rem;
  font-weight: 600;
}

.chat-header #close-chatbot {
  /* se border: none; to remove default borders from elements like buttons or input fields for a cleaner look. */
  border: none;
  color: #fff;
  height: 40px;
  width: 40px;
  font-size: 1.9rem;
  margin-right: -10px;
  padding-top:2px;
  cursor: pointer;
  border-radius: 50%;
  background: none;
  transition: 0.2s ease;
}

.chat-header #close-chatbot:hover {
  background: #3d39ac;
}

.chat-body {
  padding: 25px 22px;
  display: flex;
  gap: 20px;
  height: 460px;
  margin-bottom: 82px;
  /* The overflow-y: auto; property is used to control the vertical overflow of the .chat-body element. Here's why it is needed in this context:

  Purpose of overflow-y: auto;:
  Enable Scrolling: It allows the .chat-body to become scrollable if the content exceeds the height of the container (460px in this case). This ensures that all content can be accessed by the user, even if it doesn't fit within the fixed height. */
  overflow-y: auto;
  flex-direction: column;
}

.chat-body .message {
  display: flex;
  gap: 11px;
  align-items: center;
}

.chat-body .bot-message .bot-avatar {
  height: 35px;
  width: 35px;
  padding: 6px;
  fill: #fff;
  flex-shrink: 0;
  margin-bottom: 2px;
  /* The align-self property in CSS is used to override the align-items property for a specific flex item. It allows you to control the alignment of individual flex items along the cross axis (vertical axis by default) within a flex container */
  align-self: flex-end;
  background: #5350C4;
  border-radius: 50%;
}

.chat-body .user-message {
  /* When you remove flex-direction: column; from the .user-message class, the default flex-direction: row; is applied. This changes the alignment context for align-items.

  Explanation:
  flex-direction: row; (default): The align-items property aligns items along the cross axis, which is vertical in this case. Since the default direction is horizontal, align-items: flex-end; would try to align items at the bottom of the container, but since the items are laid out horizontally, this may not have the intended effect.
  flex-direction: column;: The align-items property aligns items along the cross axis, which is horizontal in this case. With flex-direction: column;, align-items: flex-end; aligns the items to the right end of the container. */
  flex-direction: column;
  align-items: flex-end;
}

.chat-body .message .message-text {
  padding: 12px 16px;
  max-width: 75%;
  font-size: 0.95rem;
}

.chat-body .bot-message .message-text {
  background: #F2F2FF;
  border-radius: 13px 13px 13px 3px;
}

.chat-body .user-message .message-text {
  color: #fff;
  background: #5350C4;
  border-radius: 13px 13px 3px 13px;
}

.chat-body .bot-message .thinking-indicator {
  display: flex;
  gap: 4px;
  padding-block: 15px;
}

.chat-body .bot-message .thinking-indicator .dot{
  height: 7px;
  width: 7px;
  border-radius: 50%;
  background: #6F6BC2;
  animation: dotPulse 1.8s ease-in-out infinite;
}

.chat-body .bot-message .thinking-indicator .dot:nth-child(1) {
  animation-delay: 0.2s;
}

.chat-body .bot-message .thinking-indicator .dot:nth-child(2) {
  animation-delay: 0.3s;
}

.chat-body .bot-message .thinking-indicator .dot:nth-child(3) {
  animation-delay: 0.4s;
}

@keyframes dotPulse {
  0%, 44% {
    transform: translateY(0);
  }
  28% {
    opacity: 0.4;
    transform: translateY(-4px);
  }
  44% {
    opacity: 0.2;
  }
}

.chat-footer {
  position: absolute;
}


 







